name: stable-windows-manual

on:
  workflow_dispatch:
    inputs:
      new_release:
        type: boolean
        description: Force new Release
      force_version:
        type: boolean
        description: Force update version
      vscode_arch:
        type: choice
        options:
          - x64
          - ia32
          - arm64
        description: Target architeture
      runner_type:
        type: choice
        options:
          - self-hosted
          - windows-2019
          - ubuntu-latest
        description: Type of the build runner


env:
  APP_NAME: VSCodium
  ASSETS_REPOSITORY: ${{ github.repository }}
  OS_NAME: windows
  VERSIONS_REPOSITORY: ${{ github.repository_owner }}/versions
  VSCODE_QUALITY: stable


jobs:
  build:
    runs-on: ${{ github.event.inputs.runner_type }}
    defaults:
      run:
        shell: bash
    env:
      VSCODE_ARCH: ${{ github.event.inputs.vscode_arch }}
    outputs:
      RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
      SHOULD_DEPLOY: ${{ env.SHOULD_DEPLOY }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Yarn
        run: npm install -g yarn

      - name: Setup Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Clone VSCode repo
        run: ./get_repo.sh

      - name: Check PR or cron
        run: ./check_cron_or_pr.sh

      - name: Check existing VSCodium tags/releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_RELEASE: ${{ github.event.inputs.new_release }}
        run: ./check_tags.sh
        if: env.SHOULD_DEPLOY == 'yes'

      - name: Build Icons
        env:
          SRC_PREFIX: src/
          VSCODE_PREFIX: vscodium/
        run: >
          source ./icons/build_icons.sh &&
          build_windows_main &&
          build_windows_types

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          npm_config_arch: ${{ github.event.inputs.vscode_arch }}
          npm_config_target_arch: ${{ github.event.inputs.vscode_arch }}
        run: ./build.sh
        if: env.SHOULD_BUILD == 'yes'

      - name: Prepare assets
        run: ./prepare_assets.sh
        if: env.SHOULD_BUILD == 'yes' && env.SHOULD_DEPLOY == 'yes'

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./release.sh
        if: env.SHOULD_BUILD == 'yes' && env.SHOULD_DEPLOY == 'yes'

      - name: Update versions repo
        env:
          FORCE_UPDATE: ${{ github.event.inputs.force_version }}
          GITHUB_TOKEN: ${{ secrets.STRONGER_GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ github.repository_owner }}
        run: ./update_version.sh
        if: env.SHOULD_DEPLOY == 'yes'
